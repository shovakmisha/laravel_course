
 1) php artisan make:controller PostController

 2) php artisan route:list

 3) php artisan tinker - приблуда laravel. туди треба зайти і відкриються нові можливості. Кожного разу коли змінюється код tinker треба перезапускати.

	- route('posts') - "http://localhost/posts" - чомусь не додав порт - http://localhost:5555/posts - роут posts зареєстрований в системі і воно просто виплюнуло повний маршрут
	
		- http://localhost береться з файла конгіга .env
		
		- Якщо роут динамічний - 'posts/{post}/edit' - то динамічне значення треба задати через кому - route('posts.edit', 123);
		
		- Квері стрінг задаються масивом - route('posts.edit', [123, 'foo' => 'bar']); // "http://localhost/posts/123/edit?foo=bar"
 
 4) php artisan down - закрити сайт на підтримку
 
 5) php artisan make:component ComonentName - Створить 2 файли. леяут і App\View\Components\ComonentName
 
 6) php artisan make:migration create_users_table - Створить файл для міграції в папці migration, щоб потім створити таблицю з назвою users
 
 7) php artisan migrate - Запустити міграцію. Якщо умовно таблиця users вже існує, міграції не буде
 
 8) php artisan migrate:rollback - відкотити попередню міграцію. Важливо - якщо під час попередньої міграції спрацювали декілька файликів інстал скріпта, воно якраз відкотить всіх разом
 
 9) php artisan migrate:reset - відкотити всі міграції
 
 	- php artisan migrate:fresh - Видалити всі таблиці міграцій. Дуже схоже на php artisan migrate:reset
 	
 	- php artisan migrate:refresh - Видалити всі таблиці міграцій і потім накотити міграції заново

 10) php artisan make:migration add_admin_field_to_users_table - Створить файл для міграції в папці migration, щоб добавити для таблиці users, поле admin
 
 11) 10) php artisan make:model Currency - Створить файл модель Currency в папці Models
 
 	- php artisan make:model Currency -m(migration) - Воно зразу створить файлик date_id_create_currencies_table.php - але не запустить php artisan migrate
 	
 12) php artisan make:request StorePostRequest - створить файлик у папці Http/Request
 
 
 
 
 
 
 
 
 
 
 
 
 
 
use App\Models\Post;
use App\Models\User;

for($i = 0; $i < 99; $i++){
	Post::query()->create([
		'user_id' => User::query()->value('id'),
		'title' => fake()->sentence(),
		'content' => fake()->paragraph(),
		'published' => true,
		'published_at' => fake()->dateTimeBetween(now()->subYear(), now()),
	]);
}

